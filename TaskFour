import re
from heapq import nlargest

class TaskFour():

    file = None

    freq = []
    pairs = []

    def __init__(self):
        try:
            self.file = open("corpus.txt", "r")
        except:
            print("Couldn't load the corpus")

    def getPairs(self):
        dict = {}
        for line in self.file:
            #Spliting the lines into words using regular expressions
            words = re.findall(r"[\w]+", line)

            for i in range(0, len(words)):
                if(i != len(words)-1):
                    w1 = words[i].lower()
                    w2 = words[i+1].lower()

                    tp = tuple((w1,w2))

                    if(tp in dict):
                        dict[tp] += 1
                    else:
                        dict[tp] = 1
        return dict

    def getProbability(self, a, b, dict):
        sum = 0
        for i in dict.values():
            sum += i
        ab = dict[tuple((a,b))]/sum
        print("The probability of the pair("+a+", "+b+") is: " + str(ab))

        i=0
        for w1, w2 in dict:
            if(w1 == a and w2 != b):
                i += dict[tuple((w1,w2))]
        sum2 = 0
        for i in dict.values():
            sum2 += i
        aMinusB = i/sum2
        print("The probability of the pair("+a+", -"+b+") is: " + str(aMinusB))






a = TaskFour()
dict = a.getPairs()
print(dict)
print(a.getProbability('the', 'department', dict))
